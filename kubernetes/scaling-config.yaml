apiVersion: v1
kind: Namespace
metadata:
  name: creator-clip-ai
  labels:
    name: creator-clip-ai
    environment: production

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: creator-clip-ai-app
  namespace: creator-clip-ai
  labels:
    app: creator-clip-ai
    component: frontend-backend
    tier: application
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: creator-clip-ai
      component: frontend-backend
  template:
    metadata:
      labels:
        app: creator-clip-ai
        component: frontend-backend
        tier: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: app
        image: creator-clip-ai:latest
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        - containerPort: 3001
          name: websocket
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: WS_PORT
          value: "3001"
        # Database connection pooling
        - name: VITE_DB_MIN_CONNECTIONS
          value: "2"
        - name: VITE_DB_MAX_CONNECTIONS
          value: "20"
        - name: VITE_DB_POOL_SIZE
          value: "10"
        - name: VITE_DB_ACQUIRE_TIMEOUT
          value: "10000"
        - name: VITE_DB_IDLE_TIMEOUT
          value: "300000"
        # CDN configuration
        - name: VITE_CDN_ENABLED
          value: "true"
        - name: VITE_CDN_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cdn_base_url
        # Load balancing
        - name: LOAD_BALANCER_ENABLED
          value: "true"
        - name: SESSION_AFFINITY
          value: "false"
        # Scaling configuration
        - name: MAX_CONCURRENT_REQUESTS
          value: "1000"
        - name: REQUEST_TIMEOUT
          value: "30000"
        # Supabase
        - name: VITE_SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: url
        - name: VITE_SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: anon_key
        # Other secrets from existing configuration
        - name: VITE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-secrets
              key: openai_api_key
        - name: VITE_ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-secrets
              key: anthropic_api_key
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        # Health checks
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        # Graceful shutdown
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 10"]
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      # Node selection and affinity
      nodeSelector:
        node-type: application
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - creator-clip-ai
              topologyKey: kubernetes.io/hostname
      # Restart policy
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: creator-clip-ai-service
  namespace: creator-clip-ai
  labels:
    app: creator-clip-ai
    component: frontend-backend
spec:
  type: ClusterIP
  selector:
    app: creator-clip-ai
    component: frontend-backend
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  - name: websocket
    port: 3001
    targetPort: 3001
    protocol: TCP
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: creator-clip-ai-lb
  namespace: creator-clip-ai
  labels:
    app: creator-clip-ai
    component: load-balancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: LoadBalancer
  selector:
    app: creator-clip-ai
  ports:
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: creator-clip-ai-hpa
  namespace: creator-clip-ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: creator-clip-ai-app
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metrics for scaling based on request rate
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: creator-clip-ai
data:
  cdn_base_url: "https://cdn.creator-clip-ai.com"
  max_concurrent_uploads: "10"
  video_processing_timeout: "600"
  cache_ttl: "86400"
  log_level: "info"
  metrics_enabled: "true"
  tracing_enabled: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: supabase-secrets
  namespace: creator-clip-ai
type: Opaque
data:
  # These should be base64 encoded in production
  url: "aHR0cHM6Ly95b3VyLXN1cGFiYXNlLXVybC5zdXBhYmFzZS5jbw=="
  anon_key: "eW91ci1zdXBhYmFzZS1hbm9uLWtleQ=="
  service_role_key: "eW91ci1zdXBhYmFzZS1zZXJ2aWNlLXJvbGUta2V5"

---
apiVersion: v1
kind: Secret
metadata:
  name: ai-secrets
  namespace: creator-clip-ai
type: Opaque
data:
  # These should be base64 encoded in production
  openai_api_key: "c2stLXlvdXItb3BlbmFpLWFwaS1rZXk="
  anthropic_api_key: "eW91ci1hbnRocm9waWMtYXBpLWtleQ=="

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: creator-clip-ai-pdb
  namespace: creator-clip-ai
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: creator-clip-ai
      component: frontend-backend

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: creator-clip-ai-network-policy
  namespace: creator-clip-ai
spec:
  podSelector:
    matchLabels:
      app: creator-clip-ai
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: creator-clip-ai
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 3001
  egress:
  - {}  # Allow all outbound traffic

---
# Redis deployment for session storage and caching
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: creator-clip-ai
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - 256mb
        - --maxmemory-policy
        - allkeys-lru
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: creator-clip-ai
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP

---
# Nginx Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: creator-clip-ai-ingress
  namespace: creator-clip-ai
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # WebSocket support
    nginx.ingress.kubernetes.io/websocket-services: "creator-clip-ai-service"
    # Custom configuration for load balancing
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
spec:
  tls:
  - hosts:
    - creator-clip-ai.com
    - www.creator-clip-ai.com
    secretName: creator-clip-ai-tls
  rules:
  - host: creator-clip-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: creator-clip-ai-service
            port:
              number: 80
  - host: www.creator-clip-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: creator-clip-ai-service
            port:
              number: 80

---
# Vertical Pod Autoscaler (optional)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: creator-clip-ai-vpa
  namespace: creator-clip-ai
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: creator-clip-ai-app
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: app
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 2
        memory: 4Gi
      controlledResources:
      - cpu
      - memory

---
# ServiceMonitor for Prometheus scraping
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: creator-clip-ai-metrics
  namespace: creator-clip-ai
  labels:
    app: creator-clip-ai
    release: prometheus
spec:
  selector:
    matchLabels:
      app: creator-clip-ai
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

---
# PrometheusRule for alerting
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: creator-clip-ai-alerts
  namespace: creator-clip-ai
  labels:
    app: creator-clip-ai
    release: prometheus
spec:
  groups:
  - name: creator-clip-ai.rules
    rules:
    - alert: HighCPUUsage
      expr: rate(container_cpu_usage_seconds_total{namespace="creator-clip-ai"}[5m]) > 0.8
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High CPU usage detected"
        description: "CPU usage is above 80% for more than 5 minutes"
    
    - alert: HighMemoryUsage
      expr: container_memory_usage_bytes{namespace="creator-clip-ai"} / container_spec_memory_limit_bytes > 0.9
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High memory usage detected"
        description: "Memory usage is above 90% for more than 5 minutes"
    
    - alert: PodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total{namespace="creator-clip-ai"}[15m]) > 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "Pod crash looping"
        description: "Pod {{ $labels.pod }} is crash looping"
    
    - alert: HighRequestLatency
      expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{namespace="creator-clip-ai"}[5m])) > 2
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High request latency"
        description: "95th percentile latency is above 2 seconds"
    
    - alert: HighErrorRate
      expr: rate(http_requests_total{namespace="creator-clip-ai",status=~"5.."}[5m]) / rate(http_requests_total{namespace="creator-clip-ai"}[5m]) > 0.05
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "High error rate"
        description: "Error rate is above 5% for more than 5 minutes"
    
    - alert: DatabaseConnectionPoolExhausted
      expr: database_pool_utilization{namespace="creator-clip-ai"} > 95
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: "Database connection pool almost exhausted"
        description: "Database connection pool utilization is above 95%"

---
# KEDA ScaledObject for custom metrics scaling
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: creator-clip-ai-scaler
  namespace: creator-clip-ai
spec:
  scaleTargetRef:
    name: creator-clip-ai-app
  minReplicaCount: 3
  maxReplicaCount: 50
  cooldownPeriod: 300
  triggers:
  # Scale based on HTTP request rate
  - type: prometheus
    metadata:
      serverAddress: http://prometheus:9090
      metricName: http_requests_per_second
      threshold: '100'
      query: rate(http_requests_total{namespace="creator-clip-ai"}[1m])
  # Scale based on CPU usage
  - type: cpu
    metadata:
      targetCPUUtilizationPercentage: "70"
  # Scale based on memory usage
  - type: memory
    metadata:
      targetMemoryUtilizationPercentage: "80"
  # Scale based on queue length
  - type: redis
    metadata:
      address: redis-service:6379
      listName: video_processing_queue
      listLength: '50'
  # Scale based on database connection pool utilization
  - type: prometheus
    metadata:
      serverAddress: http://prometheus:9090
      metricName: database_pool_utilization
      threshold: '80'
      query: database_pool_utilization{namespace="creator-clip-ai"}

---
# Resource quotas to prevent resource exhaustion
apiVersion: v1
kind: ResourceQuota
metadata:
  name: creator-clip-ai-quota
  namespace: creator-clip-ai
spec:
  hard:
    requests.cpu: "10"
    requests.memory: 20Gi
    limits.cpu: "20"
    limits.memory: 40Gi
    persistentvolumeclaims: "10"
    services: "10"
    secrets: "10"
    configmaps: "10"

---
# Priority class for critical workloads
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: creator-clip-ai-priority
value: 1000
globalDefault: false
description: "Priority class for Creator Clip AI application pods"
